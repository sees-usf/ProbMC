Model Type (Use exactly one of these options)
---------------------------------------------

-prism 
	Usde for loading a Prism model. In this case you have to specify in 
	sequence the name of file containing the model and the name of the 
	properties file. If the model or the properties file contain any 
	undefined constants, then you have to give the name of a file 
	which assigns values to constants (a line of the form 
	"Constant=Value" for each undefined constant. 

-prismrmc
	The same as "-prism" but it converts the given model and properties 
	to MRMC which will be used instead PRISM. 
 
-mrmc
	Used for loading MRMC models. Here you have specify the *.tra, the 
	*.lab file, a properties file (containing the property to be checked) 
	and the name of the logic, here "csl" for CTMCs or "pctl" for DTMCs or 
	MDPs.  

-graph
	To apply search algorithms to normal directed weighted graphs. The 
	graph should be stored in a *.tra and *.lab file like in the MRMC case. 
	Target nodes should be labeled in the *.lab file with the label "target". 

-probgraph
	Similar to "-graph" with the difference that the graph must be a probabilistic 
	graph, i.e., all weights are not bigger than 1.0 and for each node the sum of 
	the weights of all outgoing edges must be equal to 1.0. 



Model options
-------------

-prop n
	specifies the property which should be checked from a properties file by 
	giving its index "n". Default is 0. 

-uniform x
	Use this option in the case of a CTMC to explicitly give a uniformization 
	rate "x".  

-mc 
	Use this option to perform model checking on the model before running the 
	search. 


Search ALgorithm (use exactly one of these options)
---------------------------------------------------

-bf
	Use this option to perform Best-First search (BF) on the model. 

-sbf
	Use this option to perform Stochastic Best-First search (SBF) on the 
	model. In this case the model must be a probabilistic graph, DTMC or 
	a CTMC. 

-xbf
	Use this option to perform Extended Stochastic Best-First search (XBF) 
	on the model. In this case the model must be a probabilistic graph, DTMC or 
	a CTMC. 

-kstar [-offline]
	performs K* search (K-Optimal Paths) on the model. Using one of the options 
	"-offline" you can make the algorithm to run offline, i.e., not on-the-fly.  

-eppstein
	performs Lazy Eppstein's algorithm (K-Optimal-Paths)
	 
Search options
--------------

-complete
	enforces the algorithm to run until the complete model is explored. This 
	disabled by default. 

-nostar
	disable the termination delay, i.e., a target will be recognized as such 
	when it is selected for expansion. This is disabled by default. 

-prune x
	prune solution bases which are not better than the given bound "x", nodes 
	whose f-values are not better than "x". Prunning is disabled by default. 

-k n
	specifies the number of solutions paths which should be found. Default setting 
	is 1 for "-bf" and "-sbf" and (Integer.MAX_VALUE -1) for "-xbf" and "-kop". 

-h class
	gives the name of the java class which implements a heuristic which 
	should be used to guide the search. 

-lenH 
	Only available after specifying heuristic class. Use this option only after the
	specified heuristic or the probH option. 

-probH 
	Only available after specifying heuristic class. Use this option only after the 
	specified heuristic or the lenH option. 

-maxiter n
	stop after "n" search iterations. 

-mrmcsol
	Use it to enforce writing the counterexample of a PRISM model into 
	MRMC format. 
	
-mcsol n 
	model check the solution in the intervall of "n" iterations. This option should 
	only be used in combination with "-xbf". 0 means that the solution will not be 
	checked at all. Default setting is 50.


Logging Options
---------------

-log file
	specifies the file of technical logging. By default the technical log 
	messages will be printed on the display. 

-mlog file
	specifies a file to print the messages of the program to instead of 
	printing them on the display

-loglevel n
	specifies the level of technical logging. "n" is a number giving the 
	level of technical logging. 0 disables the technical logger. Default 
	level is 2. 
	
-report 
	activates a reporting of search data, e.g. number of explored states, 
	consumed memory, etc..., after each iteration.
	
	
General Options
---------------

-batch file
	using this option you can run the the tool in a batch mode. "file" 
	should then contain one or more units of parameters, as specified above, 	
	to run all of them automatically. Different parameter bundles should be 
	seperated by one or more empty lines. "!skip" on the head of a parameter 
	bundle will result in skipping this experiment. 

-help or --help
	shows this message.


